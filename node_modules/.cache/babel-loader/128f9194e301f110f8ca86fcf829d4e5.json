{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport { handleSaveAnswer } from '../actions/shared';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: '' // answered: this.props.location.state.answered,\n\n    };\n\n    this.addOptionToState = e => {\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const id = this.state.id;\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId;\n      const option = this.state.option;\n      console.log(id);\n      dispatch(handleSaveAnswer(logedUserId, id, option));\n      this.setState({\n        answered: true\n      });\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          questionList = _this$props2.questionList,\n          answered = _this$props2.answered;\n    const author = questionList[0].author;\n    const userAvatar = questionList[0].avatar;\n    const optionOne = questionList[0].optionOne.text;\n    const optionTwo = questionList[0].optionTwo.text; // const answer= logedUserAnswers[id]\n\n    const nrAnsOne = questionList[0].optionOne.votes.length;\n    const nrAnsTwo = questionList[0].optionTwo.votes.length;\n    const nrAns = nrAnsOne + nrAnsTwo;\n\n    const percent = (partialValue, totalValue) => 100 * partialValue / totalValue;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default QuestionCard; // {(answered) ?\n//   <React.Fragment>\n//     <h2 className='special-text'>You would rather...</h2>\n//       {(answer===optionOne) ?\n//         <p className='special-text option'>{optionOne}</p>\n//       : <p className='special-text option'>{optionTwo}</p>}\n//\n//       <p>{nrAnsOne}{(nrAnsOne === 1) ? ' user' : ' users'} / {percent(nrAnsOne, nrAns)}% of users choose: {optionOne}</p>\n//       <p>{nrAnsTwo} {(nrAnsTwo === 1) ? ' user' : ' users'} / {percent(nrAnsTwo, nrAns)}% of users choose: {optionTwo}</p>\n//       <hr />\n//   </React.Fragment>\n//\n//   :\n//   <React.Fragment>\n//     <h2 className='special-text'>Would you rather...</h2>\n//       <div className='form-vote'>\n//          <input type='radio' name={id} value='optionOne' onChange= {this.addOptionToState} />\n//          <label>{optionOne}</label><br/>\n//          <input type='radio' name={id} value='optionTwo' onChange= {this.addOptionToState} />\n//          <label>{optionTwo}</label><br/>\n//          <input type='submit' value='Vote' onClick= {this.handleSubmitAnswer} />\n//       </div>\n//       <hr />\n//   </React.Fragment>\n//\n// }\n//\n//  <div className='questionAuthor'>\n//    <p >{author}</p>\n//    <div className='user-avatar'\n//     style= {{\n//            backgroundColor: 'LightSteelBlue' ,\n//            backgroundImage: `url(${userAvatar[0][1]})`,\n//            backgroundSize: '80px 100px',\n//          }}\n//    ></div>\n//  </div>","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Menu","handleSaveAnswer","QuestionCard","state","option","addOptionToState","e","setState","target","value","handleSubmitAnswer","preventDefault","id","props","dispatch","logedUserId","console","log","answered","render","questionList","author","userAvatar","avatar","optionOne","text","optionTwo","nrAnsOne","votes","length","nrAnsTwo","nrAns","percent","partialValue","totalValue"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,gBAAT,QAAiC,mBAAjC;;AAGA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC7B;AACJC,MAAAA,MAAM,EAAE,EADJ,CAEJ;;AAFI,KAD6B;;AAAA,SAOnCC,gBAPmC,GAOfC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,MAAM,EAAEE,CAAC,CAACE,MAAF,CAASC;AAAnB,OAAd;AACL,KATkC;;AAAA,SAWnCC,kBAXmC,GAWbJ,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACK,cAAF;AAD0B,YAElBC,EAFkB,GAEX,KAAKT,KAFM,CAElBS,EAFkB;AAAA,0BAGQ,KAAKC,KAHb;AAAA,YAGlBC,QAHkB,eAGlBA,QAHkB;AAAA,YAGRC,WAHQ,eAGRA,WAHQ;AAAA,YAIlBX,MAJkB,GAIP,KAAKD,KAJE,CAIlBC,MAJkB;AAK1BY,MAAAA,OAAO,CAACC,GAAR,CAAaL,EAAb;AACAE,MAAAA,QAAQ,CAACb,gBAAgB,CAACc,WAAD,EAAcH,EAAd,EAAkBR,MAAlB,CAAjB,CAAR;AACA,WAAKG,QAAL,CAAc;AAAEW,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAED,KApBkC;AAAA;;AAsBnCC,EAAAA,MAAM,GAAG;AAAA,yBAG6B,KAAKN,KAHlC;AAAA,UAGGO,YAHH,gBAGGA,YAHH;AAAA,UAGiBF,QAHjB,gBAGiBA,QAHjB;AAKL,UAAMG,MAAM,GAAED,YAAY,CAAC,CAAD,CAAZ,CAAgBC,MAA9B;AACA,UAAMC,UAAU,GAAGF,YAAY,CAAC,CAAD,CAAZ,CAAgBG,MAAnC;AACA,UAAMC,SAAS,GAAEJ,YAAY,CAAC,CAAD,CAAZ,CAAgBI,SAAhB,CAA0BC,IAA3C;AACA,UAAMC,SAAS,GAAEN,YAAY,CAAC,CAAD,CAAZ,CAAgBM,SAAhB,CAA0BD,IAA3C,CARK,CASL;;AACA,UAAME,QAAQ,GAAEP,YAAY,CAAC,CAAD,CAAZ,CAAgBI,SAAhB,CAA0BI,KAA1B,CAAgCC,MAAhD;AACA,UAAMC,QAAQ,GAAEV,YAAY,CAAC,CAAD,CAAZ,CAAgBM,SAAhB,CAA0BE,KAA1B,CAAgCC,MAAhD;AACA,UAAME,KAAK,GAAGJ,QAAQ,GAAGG,QAAzB;;AAEC,UAAME,OAAO,GAAE,CAACC,YAAD,EAAeC,UAAf,KACZ,MAAMD,YAAP,GAAuBC,UADzB;;AAIA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGG;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADF;AAWJ;;AAnDkC;;AAsDrC,eAAehC,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n\r\n\r\nclass QuestionCard extends Component {\r\n  state={\r\n    option: '',\r\n    // answered: this.props.location.state.answered,\r\n\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n        this.setState({ option: e.target.value})\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { id } = this.state\r\n    const { dispatch, logedUserId } = this.props\r\n    const { option } = this.state\r\n    console.log( id )\r\n    dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n    this.setState({ answered: true})\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n\r\n      const { questionList, answered }= this.props\r\n\r\n      const author= questionList[0].author\r\n      const userAvatar = questionList[0].avatar\r\n      const optionOne= questionList[0].optionOne.text\r\n      const optionTwo= questionList[0].optionTwo.text\r\n      // const answer= logedUserAnswers[id]\r\n      const nrAnsOne= questionList[0].optionOne.votes.length\r\n      const nrAnsTwo= questionList[0].optionTwo.votes.length\r\n      const nrAns = nrAnsOne + nrAnsTwo\r\n\r\n       const percent= (partialValue, totalValue) => (\r\n         (100 * partialValue) / totalValue\r\n       )\r\n\r\n       return(\r\n         <div >\r\n           <Menu />\r\n\r\n            <div className='container card'>\r\n\r\n           </div>\r\n\r\n       </div>\r\n       )\r\n\r\n  }\r\n}\r\n\r\nexport default QuestionCard\r\n\r\n// {(answered) ?\r\n//   <React.Fragment>\r\n//     <h2 className='special-text'>You would rather...</h2>\r\n//       {(answer===optionOne) ?\r\n//         <p className='special-text option'>{optionOne}</p>\r\n//       : <p className='special-text option'>{optionTwo}</p>}\r\n//\r\n//       <p>{nrAnsOne}{(nrAnsOne === 1) ? ' user' : ' users'} / {percent(nrAnsOne, nrAns)}% of users choose: {optionOne}</p>\r\n//       <p>{nrAnsTwo} {(nrAnsTwo === 1) ? ' user' : ' users'} / {percent(nrAnsTwo, nrAns)}% of users choose: {optionTwo}</p>\r\n//       <hr />\r\n//   </React.Fragment>\r\n//\r\n//   :\r\n//   <React.Fragment>\r\n//     <h2 className='special-text'>Would you rather...</h2>\r\n//       <div className='form-vote'>\r\n//          <input type='radio' name={id} value='optionOne' onChange= {this.addOptionToState} />\r\n//          <label>{optionOne}</label><br/>\r\n//          <input type='radio' name={id} value='optionTwo' onChange= {this.addOptionToState} />\r\n//          <label>{optionTwo}</label><br/>\r\n//          <input type='submit' value='Vote' onClick= {this.handleSubmitAnswer} />\r\n//       </div>\r\n//       <hr />\r\n//   </React.Fragment>\r\n//\r\n// }\r\n//\r\n//  <div className='questionAuthor'>\r\n//    <p >{author}</p>\r\n//    <div className='user-avatar'\r\n//     style= {{\r\n//            backgroundColor: 'LightSteelBlue' ,\r\n//            backgroundImage: `url(${userAvatar[0][1]})`,\r\n//            backgroundSize: '80px 100px',\r\n//          }}\r\n//    ></div>\r\n//  </div>\r\n"]},"metadata":{},"sourceType":"module"}