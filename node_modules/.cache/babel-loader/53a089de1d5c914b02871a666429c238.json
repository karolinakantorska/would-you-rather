{"ast":null,"code":"var _jsxFileName = \"E:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleSaveAnswer } from '../actions/users'; // handleSaveAnswer(authedUser, qid, answer )\n// onClick= {handleSaveAnswer('johndoe', '8xf0y6ziyjabvozdd253nd', 'optionOne')}\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const dispatch = this.props.dispatch;\n      dispatch(handleSaveAnswer('johndoe', '8xf0y6ziyjabvozdd253nd', 'optionOne'));\n    };\n  }\n\n  //  handleSubmit = (e) => {\n  //    e.preventDefault()\n  // // grabbing the text from state\n  //    const { text } = this.state\n  //    const { dispatch, id } = this.props\n  //\n  //    dispatch(handleAddTweet(text, id))\n  //\n  //    //console.log('New Tweet: ', text)\n  //    // reset a text fielt to empty string\n  //    this.setState(() => ({\n  //      text: '',\n  //      toHome: id ? false : true\n  //    }))\n  //  }\n  render() {\n    const _this$props = this.props,\n          author = _this$props.author,\n          optionOne = _this$props.optionOne,\n          optionTwo = _this$props.optionTwo;\n    return React.createElement(\"div\", {\n      className: \"question-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"special-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Would you rather...\"), React.createElement(\"form\", {\n      className: \"form-vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"OptionA\",\n      value: \"OptionA\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), optionOne, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"OptionB\",\n      value: \"OptionB\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), optionTwo, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Vote\",\n      onClick: this.handleSubmitAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"questionAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, author), React.createElement(\"div\", {\n      className: \"user-avatar\",\n      style: {\n        backgroundColor: 'LightSteelBlue'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions\n}, {\n  id\n}) {\n  return {\n    author: questions[id].author,\n    optionOne: questions[id].optionOne.text,\n    optionTwo: questions[id].optionTwo.text\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["E:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","handleSaveAnswer","QuestionCard","handleSubmitAnswer","e","preventDefault","dispatch","props","render","author","optionOne","optionTwo","backgroundColor","mapStateToProps","questions","id","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,kBAAjC,C,CAEA;AACA;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SACnCI,kBADmC,GACbC,CAAD,IAAO;AAC1BA,MAAAA,CAAC,CAACC,cAAF;AAD0B,YAElBC,QAFkB,GAEL,KAAKC,KAFA,CAElBD,QAFkB;AAG1BA,MAAAA,QAAQ,CAACL,gBAAgB,CAAC,SAAD,EAAY,wBAAZ,EAAqC,WAArC,CAAjB,CAAR;AACD,KALkC;AAAA;;AAOpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACCO,EAAAA,MAAM,GAAG;AAAA,wBACgC,KAAKD,KADrC;AAAA,UACCE,MADD,eACCA,MADD;AAAA,UACSC,SADT,eACSA,SADT;AAAA,UACoBC,SADpB,eACoBA,SADpB;AAGP,WACE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAEI;AAAM,MAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,SAAzB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,EAC0DD,SAD1D,EACoE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADpE,EAEG;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,IAAI,EAAC,SAAzB;AAAmC,MAAA,KAAK,EAAC,SAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,EAEyDC,SAFzD,EAEmE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFnE,EAGG;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,MAA3B;AAAkC,MAAA,OAAO,EAAE,KAAKR,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAFJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIM,MAAJ,CADF,EAEC;AACA,MAAA,SAAS,EAAC,aADV;AAEA,MAAA,KAAK,EAAG;AACDG,QAAAA,eAAe,EAAE;AADhB,OAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFD,CATF,CADF;AAsBD;;AA/CkC;;AAkDrC,SAASC,eAAT,CAAyB;AAACC,EAAAA;AAAD,CAAzB,EAAqC;AAACC,EAAAA;AAAD,CAArC,EAA2C;AAEzC,SAAO;AACLN,IAAAA,MAAM,EAAEK,SAAS,CAACC,EAAD,CAAT,CAAcN,MADjB;AAELC,IAAAA,SAAS,EAAEI,SAAS,CAACC,EAAD,CAAT,CAAcL,SAAd,CAAwBM,IAF9B;AAGLL,IAAAA,SAAS,EAAEG,SAAS,CAACC,EAAD,CAAT,CAAcJ,SAAd,CAAwBK;AAH9B,GAAP;AAMD;;AAED,eAAehB,OAAO,CAACa,eAAD,CAAP,CAA0BX,YAA1B,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { handleSaveAnswer } from '../actions/users'\r\n\r\n// handleSaveAnswer(authedUser, qid, answer )\r\n// onClick= {handleSaveAnswer('johndoe', '8xf0y6ziyjabvozdd253nd', 'optionOne')}\r\n\r\nclass QuestionCard extends Component {\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch } = this.props\r\n    dispatch(handleSaveAnswer('johndoe', '8xf0y6ziyjabvozdd253nd','optionOne'))\r\n  }\r\n\r\n //  handleSubmit = (e) => {\r\n //    e.preventDefault()\r\n // // grabbing the text from state\r\n //    const { text } = this.state\r\n //    const { dispatch, id } = this.props\r\n //\r\n //    dispatch(handleAddTweet(text, id))\r\n //\r\n //    //console.log('New Tweet: ', text)\r\n //    // reset a text fielt to empty string\r\n //    this.setState(() => ({\r\n //      text: '',\r\n //      toHome: id ? false : true\r\n //    }))\r\n //  }\r\n  render() {\r\n    const { author, optionOne, optionTwo}= this.props\r\n\r\n    return(\r\n      <div className='question-card'>\r\n        <h2 className='special-text'>Would you rather...</h2>\r\n          <form className='form-vote'>\r\n             <input type='radio' name='OptionA' value='OptionA'  />{optionOne}<br/>\r\n             <input type='radio' name='OptionB' value='OptionB' />{optionTwo}<br/>\r\n             <input type='submit' value='Vote' onClick={this.handleSubmitAnswer} />\r\n          </form>\r\n          <p></p>\r\n        <hr />\r\n        <div className='questionAuthor'>\r\n          <p>{author}</p>\r\n         <div\r\n         className='user-avatar'\r\n         style= {{\r\n                backgroundColor: 'LightSteelBlue',\r\n              }}\r\n         ></div>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({questions},{id}) {\r\n\r\n  return {\r\n    author: questions[id].author,\r\n    optionOne: questions[id].optionOne.text,\r\n    optionTwo: questions[id].optionTwo.text,\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}