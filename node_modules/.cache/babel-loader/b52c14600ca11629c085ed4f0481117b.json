{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport QuestionList from './QuestionList';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seeQuestion: true,\n      linkText: 'Show Answered Questions'\n    };\n\n    this.toggleQuestions = () => {\n      this.state.seeQuestion ? this.setState({\n        seeQuestion: false,\n        linkText: 'Show Unanswered Questions'\n      }) : this.setState({\n        seeQuestion: true,\n        linkText: 'Show Answered Questions'\n      });\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          logedUserName = _this$props.logedUserName,\n          unanswered = _this$props.unanswered,\n          answered = _this$props.answered;\n    const _this$state = this.state,\n          seeQuestion = _this$state.seeQuestion,\n          linkText = _this$state.linkText;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      name: logedUserName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"question-toggle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      id: \"toggleQuestions\",\n      onClick: this.toggleQuestions,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, linkText)), seeQuestion ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(QuestionList, {\n      questionList: unanswered,\n      text: \"Unanswert Questions\",\n      answered: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(QuestionList, {\n      questionList: answered,\n      text: \"Answert Questions\",\n      answered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  logedUser,\n  questions\n}) {\n  const logedUserName = logedUser.name;\n  const questionsId = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const unansweredID = questionsId.filter(id => !questions[id].optionOne.votes.includes('johndoe') && !questions[id].optionTwo.votes.includes('johndoe'));\n  const answeredID = questionsId.filter(id => questions[id].optionOne.votes.includes('johndoe') || questions[id].optionTwo.votes.includes('johndoe'));\n  const unanswered = [];\n  unansweredID.map(id => {\n    unanswered.push([id, {\n      optionOne: questions[id].optionOne.text,\n      optionTwo: questions[id].optionTwo.text\n    }]);\n  });\n  const answered = [];\n  answeredID.map(id => {\n    answered.push([id, {\n      id: id,\n      optionOne: questions[id].optionOne.text,\n      optionTwo: questions[id].optionTwo.text\n    }]);\n  });\n  return {\n    logedUserName,\n    unanswered,\n    answered\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Menu","QuestionList","Home","state","seeQuestion","linkText","toggleQuestions","setState","render","props","logedUserName","unanswered","answered","mapStateToProps","logedUser","questions","name","questionsId","Object","keys","sort","a","b","timestamp","unansweredID","filter","id","optionOne","votes","includes","optionTwo","answeredID","map","push","text"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\nimport QuestionList from './QuestionList'\r\n\r\nclass Home extends Component {\r\n  state= {\r\n    seeQuestion: true,\r\n    linkText: 'Show Answered Questions'\r\n  }\r\n\r\n  toggleQuestions = () => {\r\n    (this.state.seeQuestion) ?\r\n      this.setState({seeQuestion: false, linkText: 'Show Unanswered Questions',})\r\n    :\r\n      this.setState({seeQuestion: true, linkText: 'Show Answered Questions',})\r\n  }\r\n\r\n  render () {\r\n\r\n       const { logedUserName, unanswered, answered, } = this.props\r\n       const { seeQuestion, linkText }= this.state\r\n\r\n      return (\r\n        <div>\r\n          <Menu name = {logedUserName}/>\r\n\r\n          <div className= 'container' >\r\n            <section className= 'question-toggle'>\r\n              <p  id= 'toggleQuestions' onClick={ this.toggleQuestions }>{linkText}</p>\r\n            </section>\r\n\r\n\r\n            {(seeQuestion) ?\r\n              <div>\r\n                <QuestionList questionList={unanswered} text= 'Unanswert Questions' answered= {false} />\r\n              </div>\r\n              :\r\n              <div>\r\n                <QuestionList questionList={answered} text= 'Answert Questions'answered= {true}/>\r\n              </div>\r\n             }\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps ({logedUser, questions}) {\r\n  const logedUserName = logedUser.name\r\n  const questionsId = Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp)\r\n\r\n  const unansweredID = questionsId.filter(\r\n    (id)=> (\r\n      !(questions[id].optionOne.votes.includes('johndoe')) && !(questions[id].optionTwo.votes.includes('johndoe'))\r\n    )\r\n  )\r\n  const answeredID = questionsId.filter(\r\n    (id)=> (\r\n      questions[id].optionOne.votes.includes('johndoe') || questions[id].optionTwo.votes.includes('johndoe')\r\n    )\r\n  )\r\n  const unanswered = []\r\n  unansweredID.map((id) => {\r\n    unanswered.push([id,{optionOne: questions[id].optionOne.text, optionTwo: questions[id].optionTwo.text}])\r\n  })\r\n  const answered = []\r\n  answeredID.map((id) => {\r\n    answered.push([id,{id:id, optionOne: questions[id].optionOne.text, optionTwo: questions[id].optionTwo.text}])\r\n  })\r\n\r\n  return {\r\n    logedUserName,\r\n\r\n    unanswered,\r\n    answered,\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home)\r\n"]},"metadata":{},"sourceType":"module"}