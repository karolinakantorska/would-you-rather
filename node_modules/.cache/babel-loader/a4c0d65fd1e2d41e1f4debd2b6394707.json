{"ast":null,"code":"import { _getUsers, _getQuestions, _saveQuestionAnswer, _saveQuestion } from '../utils/_DATA';\nimport { receiveUsers, saveAnswerInUsers, addQuestionInU } from './users';\nimport { receiveQuestions, saveAnswerInQ, addQuestionInQ } from './questions';\nimport { setLogedUser } from './logedUser';\nexport function handleInitialDataUsers() {\n  return dispatch => {\n    return _getUsers().then(users => {\n      dispatch(receiveUsers(users));\n    });\n  };\n}\nexport function handleInitialDataQuestions() {\n  return dispatch => {\n    return _getQuestions().then(questions => {\n      dispatch(receiveQuestions(questions));\n    });\n  };\n}\nexport function handleSaveAnswer(authedUser, qid, answer) {\n  return dispatch => {\n    return _saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then((users, guestions) => dispatch(saveAnswerInUsers(authedUser, qid, answer)), dispatch(saveAnswerInQ(authedUser, qid, answer)));\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  const question = {\n    optionOneText,\n    optionTwoText,\n    author\n  };\n  return dispatch => {\n    return _saveQuestion({\n      optionOneText,\n      optionTwoText,\n      author\n    }).then((question, users) => console.log(question.id), dispatch(addQuestionInQ(question)), dispatch(addQuestionInU(question.author, this.question.id)));\n  };\n} // function formatQuestion ({ optionOneText, optionTwoText, author })","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/actions/shared.js"],"names":["_getUsers","_getQuestions","_saveQuestionAnswer","_saveQuestion","receiveUsers","saveAnswerInUsers","addQuestionInU","receiveQuestions","saveAnswerInQ","addQuestionInQ","setLogedUser","handleInitialDataUsers","dispatch","then","users","handleInitialDataQuestions","questions","handleSaveAnswer","authedUser","qid","answer","guestions","handleAddQuestion","optionOneText","optionTwoText","author","question","console","log","id"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,aAApB,EAAmCC,mBAAnC,EAAwDC,aAAxD,QAA8E,gBAA9E;AACA,SAASC,YAAT,EAAuBC,iBAAvB,EAA0CC,cAA1C,QAAgE,SAAhE;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,cAA1C,QAAgE,aAAhE;AACA,SAASC,YAAT,QAA4B,aAA5B;AAEA,OAAO,SAASC,sBAAT,GAAkC;AACvC,SAAQC,QAAD,IAAe;AACpB,WAAOZ,SAAS,GACba,IADI,CACEC,KAAD,IAAW;AACfF,MAAAA,QAAQ,CAACR,YAAY,CAACU,KAAD,CAAb,CAAR;AACD,KAHI,CAAP;AAID,GALD;AAMD;AACD,OAAO,SAASC,0BAAT,GAAsC;AAC3C,SAAQH,QAAD,IAAe;AACpB,WAAOX,aAAa,GACjBY,IADI,CACEG,SAAD,IAAe;AACnBJ,MAAAA,QAAQ,CAACL,gBAAgB,CAACS,SAAD,CAAjB,CAAR;AACD,KAHI,CAAP;AAID,GALD;AAMD;AAED,OAAO,SAASC,gBAAT,CAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,MAA5C,EAAoD;AACzD,SAAQR,QAAD,IAAc;AACnB,WAAOV,mBAAmB,CAAC;AACzBgB,MAAAA,UADyB;AAEzBC,MAAAA,GAFyB;AAGzBC,MAAAA;AAHyB,KAAD,CAAnB,CAIJP,IAJI,CAIC,CAACC,KAAD,EAAQO,SAAR,KACNT,QAAQ,CAACP,iBAAiB,CAACa,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAlB,CALH,EAMLR,QAAQ,CAACJ,aAAa,CAACU,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAd,CANH,CAAP;AAOD,GARD;AASD;AAGD,OAAO,SAASE,iBAAT,CAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAkE;AACvE,QAAMC,QAAQ,GAAI;AAACH,IAAAA,aAAD;AAAgBC,IAAAA,aAAhB;AAA+BC,IAAAA;AAA/B,GAAlB;AACA,SAAQb,QAAD,IAAc;AACnB,WAAOT,aAAa,CAAE;AACpBoB,MAAAA,aADoB;AAEpBC,MAAAA,aAFoB;AAGpBC,MAAAA;AAHoB,KAAF,CAAb,CAKJZ,IALI,CAKC,CAACa,QAAD,EAAWZ,KAAX,KACNa,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,EAArB,CANK,EAOLjB,QAAQ,CAACH,cAAc,CAACiB,QAAD,CAAf,CAPH,EAQLd,QAAQ,CAACN,cAAc,CAACoB,QAAQ,CAACD,MAAV,EAAiB,KAAKC,QAAL,CAAcG,EAA/B,CAAf,CARH,CAAP;AAUD,GAXD;AAaD,C,CAED","sourcesContent":["import { _getUsers, _getQuestions, _saveQuestionAnswer, _saveQuestion  } from '../utils/_DATA'\r\nimport { receiveUsers, saveAnswerInUsers, addQuestionInU } from './users'\r\nimport { receiveQuestions, saveAnswerInQ, addQuestionInQ } from './questions'\r\nimport { setLogedUser} from './logedUser'\r\n\r\nexport function handleInitialDataUsers() {\r\n  return (dispatch) =>  {\r\n    return _getUsers()\r\n      .then((users) => {\r\n        dispatch(receiveUsers(users))\r\n      })\r\n  }\r\n}\r\nexport function handleInitialDataQuestions() {\r\n  return (dispatch) =>  {\r\n    return _getQuestions()\r\n      .then((questions) => {\r\n        dispatch(receiveQuestions(questions))\r\n      })\r\n  }\r\n}\r\n\r\nexport function handleSaveAnswer (authedUser, qid, answer) {\r\n  return (dispatch) => {\r\n    return _saveQuestionAnswer({\r\n      authedUser,\r\n      qid,\r\n      answer})\r\n      .then((users, guestions) =>\r\n      dispatch(saveAnswerInUsers(authedUser, qid, answer)),\r\n      dispatch(saveAnswerInQ(authedUser, qid, answer)))\r\n  }\r\n}\r\n\r\n\r\nexport function handleAddQuestion (optionOneText, optionTwoText, author) {\r\n  const question =  {optionOneText, optionTwoText, author}\r\n  return (dispatch) => {\r\n    return _saveQuestion ({\r\n      optionOneText,\r\n      optionTwoText,\r\n      author\r\n    })\r\n      .then((question, users) =>\r\n      console.log(question.id),\r\n      dispatch(addQuestionInQ(question)),\r\n      dispatch(addQuestionInU(question.author,this.question.id)))\r\n\r\n  }\r\n\r\n}\r\n\r\n// function formatQuestion ({ optionOneText, optionTwoText, author })\r\n"]},"metadata":{},"sourceType":"module"}