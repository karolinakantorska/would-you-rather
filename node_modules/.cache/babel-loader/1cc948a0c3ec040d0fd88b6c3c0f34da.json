{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu'; //import QuestionList from './QuestionList'\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seeQuestion: true,\n      linkText: 'Show Answered Questions'\n    };\n\n    this.toggleQuestions = () => {\n      this.state.seeQuestion ? this.setState({\n        seeQuestion: false,\n        linkText: 'Show Unanswered Questions'\n      }) : this.setState({\n        seeQuestion: true,\n        linkText: 'Show Answered Questions'\n      });\n    };\n  }\n\n  render() {\n    const logedUserID = this.props.logedUserID;\n\n    if (logedUserID === '') {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    } else {\n      // const {logedUserID, logedUserName, logedUserData, questionId, } = this.props\n      // const { seeQuestion, linkText }= this.state\n      // const logedUserAnswers = Object.keys(logedUserData.answers)\n      // let unanswered =[];\n      // let answered =[];\n      // (() =>  {questionId.map((q) =>\n      //    (!logedUserAnswers.includes(q)) ?\n      //   unanswered.push(q)\n      //   :\n      //   answered.push(q)\n      // )})()\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }) // <Menu name = {logedUserName}/>\n      // <div>\n      //\n      //   <button onClick={ this.toggleQuestions }>{linkText}</button>\n      //\n      //   {(seeQuestion) ?\n      //     <div>\n      //       <QuestionList ids={unanswered} text= 'Unanswert Questions'/>\n      //     </div>\n      //     :\n      //     <div>\n      //       <QuestionList ids={unanswered} text= 'Answert Questions'/>\n      //     </div>\n      //    }\n      //\n      // </div>\n      ;\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  logedUser,\n  questions\n}) {\n  const logedUserID = logedUser.id;\n  const logedUserName = logedUser.name;\n  const questionsId = Object.keys(questions);\n\n  const filterIt = id => questions[id].optionOne.votes.map(a => a === id);\n\n  const unanswered = questionsId.filter(filterIt);\n  return {\n    logedUserID,\n    logedUserName,\n    questionId: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Redirect","Menu","Home","state","seeQuestion","linkText","toggleQuestions","setState","render","logedUserID","props","mapStateToProps","logedUser","questions","id","logedUserName","name","questionsId","Object","keys","filterIt","optionOne","votes","map","a","unanswered","filter","questionId","sort","b","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB,C,CACA;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BK,KAD2B,GACpB;AACLC,MAAAA,WAAW,EAAE,IADR;AAELC,MAAAA,QAAQ,EAAE;AAFL,KADoB;;AAAA,SAM3BC,eAN2B,GAMT,MAAM;AACrB,WAAKH,KAAL,CAAWC,WAAZ,GACE,KAAKG,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE,KAAd;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAd,CADF,GAGE,KAAKE,QAAL,CAAc;AAACH,QAAAA,WAAW,EAAE,IAAd;AAAoBC,QAAAA,QAAQ,EAAE;AAA9B,OAAd,CAHF;AAID,KAX0B;AAAA;;AAa3BG,EAAAA,MAAM,GAAI;AAAA,UACDC,WADC,GACc,KAAKC,KADnB,CACDD,WADC;;AAEP,QAAIA,WAAW,KAAK,EAApB,EAAwB;AACtB,aACM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAGD,KAJD,MAMK;AACJ;AACA;AACA;AACA;AACA;AAEC;AACA;AACA;AACA;AACA;AACA;AAGD,aACE;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjBJ;AAoBD;AACF;;AAzD0B;;AA2D7B,SAASE,eAAT,CAA0B;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAA1B,EAAkD;AAChD,QAAMJ,WAAW,GAAGG,SAAS,CAACE,EAA9B;AACA,QAAMC,aAAa,GAAGH,SAAS,CAACI,IAAhC;AACA,QAAMC,WAAW,GAAGC,MAAM,CAACC,IAAP,CAAYN,SAAZ,CAApB;;AAID,QAAMO,QAAQ,GAAEN,EAAD,IACZD,SAAS,CAACC,EAAD,CAAT,CAAcO,SAAd,CAAwBC,KAAxB,CAA8BC,GAA9B,CAAoCC,CAAD,IAAOA,CAAC,KAAGV,EAA9C,CADH;;AAGA,QAAMW,UAAU,GAAGR,WAAW,CAACS,MAAZ,CAAmBN,QAAnB,CAAnB;AAMC,SAAO;AACLX,IAAAA,WADK;AAELM,IAAAA,aAFK;AAKLY,IAAAA,UAAU,EAAET,MAAM,CAACC,IAAP,CAAYN,SAAZ,EAAuBe,IAAvB,CAA4B,CAACJ,CAAD,EAAGK,CAAH,KAAShB,SAAS,CAACgB,CAAD,CAAT,CAAaC,SAAb,GAAyBjB,SAAS,CAACW,CAAD,CAAT,CAAaM,SAA3E;AALP,GAAP;AAOD;;AACD,eAAe/B,OAAO,CAACY,eAAD,CAAP,CAAyBT,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\n//import QuestionList from './QuestionList'\r\n\r\nclass Home extends Component {\r\n  state= {\r\n    seeQuestion: true,\r\n    linkText: 'Show Answered Questions'\r\n  }\r\n\r\n  toggleQuestions = () => {\r\n    (this.state.seeQuestion) ?\r\n      this.setState({seeQuestion: false, linkText: 'Show Unanswered Questions',})\r\n    :\r\n      this.setState({seeQuestion: true, linkText: 'Show Answered Questions',})\r\n  }\r\n\r\n  render () {\r\n    const {logedUserID} = this.props\r\n     if (logedUserID === '') {\r\n       return (\r\n             <Redirect to= '/login' />\r\n       )\r\n     }\r\n\r\n    else  {\r\n      // const {logedUserID, logedUserName, logedUserData, questionId, } = this.props\r\n      // const { seeQuestion, linkText }= this.state\r\n      // const logedUserAnswers = Object.keys(logedUserData.answers)\r\n      // let unanswered =[];\r\n      // let answered =[];\r\n\r\n       // (() =>  {questionId.map((q) =>\r\n       //    (!logedUserAnswers.includes(q)) ?\r\n       //   unanswered.push(q)\r\n       //   :\r\n       //   answered.push(q)\r\n       // )})()\r\n\r\n\r\n      return (\r\n        <div className= 'container'></div>\r\n          // <Menu name = {logedUserName}/>\r\n          // <div>\r\n          //\r\n          //   <button onClick={ this.toggleQuestions }>{linkText}</button>\r\n          //\r\n          //   {(seeQuestion) ?\r\n          //     <div>\r\n          //       <QuestionList ids={unanswered} text= 'Unanswert Questions'/>\r\n          //     </div>\r\n          //     :\r\n          //     <div>\r\n          //       <QuestionList ids={unanswered} text= 'Answert Questions'/>\r\n          //     </div>\r\n          //    }\r\n          //\r\n          // </div>\r\n\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapStateToProps ({logedUser, questions}) {\r\n  const logedUserID = logedUser.id\r\n  const logedUserName = logedUser.name\r\n  const questionsId = Object.keys(questions)\r\n\r\n\r\n\r\n const filterIt=(id)=> (\r\n    questions[id].optionOne.votes.map ((a) => a===id)\r\n  )\r\n const unanswered = questionsId.filter(filterIt)\r\n\r\n\r\n\r\n\r\n\r\n  return {\r\n    logedUserID,\r\n    logedUserName,\r\n\r\n\r\n    questionId: Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp),\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home)\r\n"]},"metadata":{},"sourceType":"module"}