{"ast":null,"code":"var _jsxFileName = \"E:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu';\nimport QuestionList from './QuestionList';\n\nclass Home extends Component {\n  render() {\n    const authedUser = this.props.authedUser;\n\n    if (authedUser === null) {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: authedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \" Questions \")));\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  authedUser,\n  questions,\n  users\n}) {\n  const answeredQuestionsID = Object.keys(users[authedID].answers);\n  return {\n    authedUser,\n    questionId: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp),\n    answeredQuestionsID\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["E:/Karolina/react projects/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Redirect","Menu","QuestionList","Home","render","authedUser","props","mapStateToProps","questions","users","answeredQuestionsID","Object","keys","authedID","answers","questionId","sort","a","b","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAN,SAAmBL,SAAnB,CAA6B;AAE3BM,EAAAA,MAAM,GAAI;AAAA,UACDC,UADC,GACa,KAAKC,KADlB,CACDD,UADC;;AAER,QAAIA,UAAU,KAAK,IAAnB,EAAyB;AACvB,aACM,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN;AAGD,KAJD,MAKM;AACJ,aACE;AAAK,QAAA,SAAS,EAAE,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAIA,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADA,CAFF,CADF;AAUD;AACF;;AArB0B;;AAuB7B,SAASE,eAAT,CAA0B;AAACF,EAAAA,UAAD;AAAaG,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAA1B,EAA0D;AACxD,QAAMC,mBAAmB,GAAGC,MAAM,CAACC,IAAP,CAAaH,KAAK,CAACI,QAAD,CAAL,CAAgBC,OAA7B,CAA5B;AACA,SAAO;AACLT,IAAAA,UADK;AAELU,IAAAA,UAAU,EAAEJ,MAAM,CAACC,IAAP,CAAYJ,SAAZ,EAAuBQ,IAAvB,CAA4B,CAACC,CAAD,EAAGC,CAAH,KAASV,SAAS,CAACU,CAAD,CAAT,CAAaC,SAAb,GAAyBX,SAAS,CAACS,CAAD,CAAT,CAAaE,SAA3E,CAFP;AAGLT,IAAAA;AAHK,GAAP;AAKD;;AACD,eAAeX,OAAO,CAACQ,eAAD,CAAP,CAAyBJ,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport QuestionList from './QuestionList'\r\n\r\nclass Home extends Component {\r\n\r\n  render () {\r\n    const {authedUser} = this.props\r\n    if (authedUser === null) {\r\n      return (\r\n            <Redirect to= '/login' />\r\n      )\r\n    }\r\n    else  {\r\n      return (\r\n        <div className= 'container'>\r\n          <Menu name = {authedUser}/>\r\n          <div>\r\n          <p> Questions </p>\r\n\r\n          </div>\r\n\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapStateToProps ({authedUser, questions, users}) {\r\n  const answeredQuestionsID = Object.keys (users[authedID].answers)\r\n  return {\r\n    authedUser,\r\n    questionId: Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp),\r\n    answeredQuestionsID\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home)\r\n"]},"metadata":{},"sourceType":"module"}