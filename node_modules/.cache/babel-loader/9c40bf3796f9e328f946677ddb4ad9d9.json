{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionList.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport LinkToQuestion from './LinkToQuestion';\n\nfunction QuestionList(props) {\n  const questionList = props.questionList,\n        text = props.text,\n        answered = props.answered;\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"question-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"special-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, text), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, questionList.map(id => (consol.log(id[0]), React.createElement(\"li\", {\n    className: \"question-link\",\n    key: id[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: {\n      pathname: `questions/: ${id[0]}`,\n      state: {\n        questionList: questionList[id[0]],\n        answered: answered\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"question-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"link\"))))))));\n}\n\nexport default QuestionList; // &#8226; Would you rather <b>{qId[1].optionOne.text}</b> <i> than </i>than <b>{qId[1].optionTwo.text}</b>?","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionList.js"],"names":["React","Link","LinkToQuestion","QuestionList","props","questionList","text","answered","map","id","consol","log","pathname","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,SAASC,YAAT,CAAuBC,KAAvB,EAA8B;AAAA,QAGlBC,YAHkB,GAGeD,KAHf,CAGlBC,YAHkB;AAAA,QAGJC,IAHI,GAGeF,KAHf,CAGJE,IAHI;AAAA,QAGEC,QAHF,GAGeH,KAHf,CAGEG,QAHF;AAIxB,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BD,IAA9B,CADF,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCD,YAAY,CAACG,GAAb,CAAkBC,EAAD,KAChBC,MAAM,CAACC,GAAP,CAAWF,EAAE,CAAC,CAAD,CAAb,GACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAA8B,IAAA,GAAG,EAAEA,EAAE,CAAC,CAAD,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAE;AACNG,MAAAA,QAAQ,EAAG,eAAcH,EAAE,CAAC,CAAD,CAAI,EADzB;AAENI,MAAAA,KAAK,EAAE;AAAER,QAAAA,YAAY,EAAEA,YAAY,CAACI,EAAE,CAAC,CAAD,CAAH,CAA5B;AAAqCF,QAAAA,QAAQ,EAAEA;AAA/C;AAFD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,CADF,CAFc,CAAjB,CADD,CAFJ,CADJ,CADF;AAuBH;;AAEH,eAAeJ,YAAf,C,CACA","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport LinkToQuestion from './LinkToQuestion'\r\n\r\nfunction QuestionList (props) {\r\n\r\n\r\n    const { questionList, text, answered } = props\r\n      return (\r\n        <div className='container'>\r\n            <div className='question-list'>\r\n              <h2 className='special-text'>{text}</h2>\r\n                <ul>\r\n                {questionList.map((id) => (\r\n                  consol.log(id[0]),\r\n                    <li className='question-link' key={id[0]} >\r\n                      <Link to={{\r\n                          pathname: `questions/: ${id[0]}`,\r\n                          state: { questionList: questionList[id[0]], answered: answered },\r\n                        }}>\r\n                        <p className='question-link'>\r\n                              link\r\n                        </p>\r\n                      </Link>\r\n                    </li>\r\n                  ))\r\n                }\r\n              </ul>\r\n            </div>\r\n        </div>\r\n      )\r\n  }\r\n\r\nexport default QuestionList\r\n// &#8226; Would you rather <b>{qId[1].optionOne.text}</b> <i> than </i>than <b>{qId[1].optionTwo.text}</b>?\r\n"]},"metadata":{},"sourceType":"module"}