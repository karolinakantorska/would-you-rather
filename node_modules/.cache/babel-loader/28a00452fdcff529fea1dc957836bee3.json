{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport { handleSaveAnswer } from '../actions/shared';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: '',\n      answered: this.props.location.state.answered\n    };\n\n    this.addOptionToState = e => {\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const id = this.props.location.state.id;\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId;\n      const option = this.state.option;\n      console.log(id);\n      dispatch(handleSaveAnswer(logedUserId, id, option));\n      this.setState({\n        answered: true\n      });\n    };\n  }\n\n  render() {\n    const id = this.props.location.state.id;\n    const answered = this.state.answered;\n    const logedUserName = this.props.logedUserName;\n    const _this$props2 = this.props,\n          questions = _this$props2.questions,\n          addOptionToState = _this$props2.addOptionToState,\n          logedUserAnswers = _this$props2.logedUserAnswers,\n          avatars = _this$props2.avatars;\n    const author = questions[id].author;\n    const userAvatar = avatars.filter(a => a[0] === author);\n    console.log(userAvatar[0][1]);\n    const optionOne = questions[id].optionOne.text;\n    const optionTwo = questions[id].optionTwo.text;\n    const answer = logedUserAnswers[id];\n    const nrAnsOne = questions[id].optionOne.votes.length;\n    const nrAnsTwo = questions[id].optionTwo.votes.length;\n    const nrAns = nrAnsOne + nrAnsTwo;\n\n    const percent = (partialValue, totalValue) => 100 * partialValue / totalValue;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, answered ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"special-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"You would rather...\"), answer === optionOne ? React.createElement(\"p\", {\n      className: \"special-text option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, optionOne) : React.createElement(\"p\", {\n      className: \"special-text option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, optionTwo), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, nrAnsOne, nrAnsOne === 1 ? ' user' : ' users', \" / \", percent(nrAnsOne, nrAns), \"% of users choose: \", optionOne), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, nrAnsTwo, \" \", nrAnsTwo === 1 ? ' user' : ' users', \" / \", percent(nrAnsTwo, nrAns), \"% of users choose: \", optionTwo), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"special-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Would you rather...\"), React.createElement(\"div\", {\n      className: \"form-vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: \"optionOne\",\n      onChange: addOptionToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, optionOne), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: \"optionTwo\",\n      onChange: addOptionToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), optionTwo, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, optionTwo), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Vote\",\n      onClick: this.handleSubmitAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questionAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, author), React.createElement(\"div\", {\n      className: \"user-avatar\",\n      style: {\n        backgroundColor: 'LightSteelBlue',\n        backgroundImage: `url(${userAvatar[0][1]})`,\n        backgroundSize: '80px 100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  logedUser,\n  users\n}) {\n  const logedUserId = logedUser.id;\n  const logedUserName = logedUser.name;\n  const logedUserAnswers = users[logedUser.id].answers;\n  const usersId = Object.keys(users);\n  const avatars = [];\n  usersId.map(user => avatars.push([user, users[user].avatarURL]));\n  return {\n    logedUserId,\n    logedUserName,\n    questions,\n    logedUserAnswers,\n    avatars\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Menu","handleSaveAnswer","QuestionCard","state","option","answered","props","location","addOptionToState","e","setState","target","value","handleSubmitAnswer","preventDefault","id","dispatch","logedUserId","console","log","render","logedUserName","questions","logedUserAnswers","avatars","author","userAvatar","filter","a","optionOne","text","optionTwo","answer","nrAnsOne","votes","length","nrAnsTwo","nrAns","percent","partialValue","totalValue","backgroundColor","backgroundImage","backgroundSize","mapStateToProps","logedUser","users","name","answers","usersId","Object","keys","map","user","push","avatarURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n\r\n\r\nclass QuestionCard extends Component {\r\n  state={\r\n    option: '',\r\n    answered: this.props.location.state.answered,\r\n\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n        this.setState({ option: e.target.value})\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { id } = this.props.location.state\r\n    const { dispatch, logedUserId } = this.props\r\n    const { option } = this.state\r\n    console.log( id )\r\n    dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n    this.setState({ answered: true})\r\n\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.location.state\r\n    const { answered } = this.state\r\n    const { logedUserName}= this.props\r\n\r\n   const { questions, addOptionToState,logedUserAnswers, avatars}= this.props\r\n   const author= questions[id].author\r\n   const userAvatar = avatars.filter(\r\n     (a) => (a[0]===author)\r\n   )\r\n   console.log(userAvatar[0][1])\r\n   const optionOne= questions[id].optionOne.text\r\n   const optionTwo= questions[id].optionTwo.text\r\n   const answer= logedUserAnswers[id]\r\n   const nrAnsOne= questions[id].optionOne.votes.length\r\n   const nrAnsTwo= questions[id].optionTwo.votes.length\r\n   const nrAns = nrAnsOne + nrAnsTwo\r\n\r\n   const percent= (partialValue, totalValue) => (\r\n     (100 * partialValue) / totalValue\r\n   )\r\n\r\n       return(\r\n         <div >\r\n           <Menu />\r\n\r\n            <div className='container card'>\r\n              {(answered) ?\r\n              <React.Fragment>\r\n                <h2 className='special-text'>You would rather...</h2>\r\n                  {(answer===optionOne) ?\r\n                    <p className='special-text option'>{optionOne}</p>\r\n                  : <p className='special-text option'>{optionTwo}</p>}\r\n\r\n                  <p>{nrAnsOne}{(nrAnsOne === 1) ? ' user' : ' users'} / {percent(nrAnsOne, nrAns)}% of users choose: {optionOne}</p>\r\n                  <p>{nrAnsTwo} {(nrAnsTwo === 1) ? ' user' : ' users'} / {percent(nrAnsTwo, nrAns)}% of users choose: {optionTwo}</p>\r\n                  <hr />\r\n              </React.Fragment>\r\n\r\n              :\r\n              <React.Fragment>\r\n                <h2 className='special-text'>Would you rather...</h2>\r\n                  <div className='form-vote'>\r\n                     <input type='radio' name='option' value='optionOne'onChange= {addOptionToState} />\r\n                     <label>{optionOne}</label><br/>\r\n                     <input type='radio' name='option' value='optionTwo' onChange= {addOptionToState} />{optionTwo}\r\n                     <label>{optionTwo}</label><br/>\r\n                     <input type='submit' value='Vote' onClick= {this.handleSubmitAnswer} />\r\n                  </div>\r\n                  <hr />\r\n              </React.Fragment>\r\n\r\n            }\r\n\r\n             <div className='questionAuthor'>\r\n               <p >{author}</p>\r\n               <div className='user-avatar'\r\n                style= {{\r\n                       backgroundColor: 'LightSteelBlue' ,\r\n                       backgroundImage: `url(${userAvatar[0][1]})`,\r\n                       backgroundSize: '80px 100px',\r\n                     }}\r\n               ></div>\r\n             </div>\r\n           </div>\r\n\r\n       </div>\r\n       )\r\n\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({questions, logedUser, users}) {\r\n  const logedUserId = logedUser.id\r\n  const logedUserName = logedUser.name\r\n  const logedUserAnswers = users[logedUser.id].answers\r\n  const usersId = Object.keys(users)\r\n  const avatars = []\r\n  usersId.map((user) =>\r\n    avatars.push([user,users[user].avatarURL ])\r\n  )\r\n\r\n  return {\r\n    logedUserId,\r\n    logedUserName,\r\n    questions,\r\n    logedUserAnswers,\r\n    avatars\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}