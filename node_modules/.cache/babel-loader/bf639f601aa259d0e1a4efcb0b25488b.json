{"ast":null,"code":"var _jsxFileName = \"E:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu';\nimport QuestionList from './QuestionList';\n\nclass Home extends Component {\n  render() {\n    const logedUser = this.props.logedUser;\n\n    if (logedUser.logedUser === '') {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      });\n    } else {\n      const _this$props = this.props,\n            logedUserID = _this$props.logedUserID,\n            logedUserData = _this$props.logedUserData,\n            questionId = _this$props.questionId;\n      const logedUserAnswers = Object.keys(logedUserData.answers);\n      const unanswered = logedUserAnswers.map(u => questionId.map((q, i) => {\n        if (q !== u) {\n          questionId.splice(i, 1);\n        }\n      }));\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: logedUser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, \" questionId\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, questionId.map(qId => React.createElement(\"li\", {\n        key: qId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, qId))))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Answered\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, logedUserAnswers.map(qId => React.createElement(\"li\", {\n        key: qId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, qId)))), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"UnAnswered\", React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, logedUserAnswers.map(qId => React.createElement(\"li\", {\n        key: qId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, qId))))));\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  logedUser,\n  users,\n  questions\n}) {\n  const logedUserID = Object.values(logedUser);\n  const logedUserData = users[logedUserID];\n  return {\n    logedUser,\n    logedUserID,\n    logedUserData,\n    questionId: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["E:/Karolina/react projects/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Redirect","Menu","QuestionList","Home","render","logedUser","props","logedUserID","logedUserData","questionId","logedUserAnswers","Object","keys","answers","unanswered","map","u","q","i","splice","qId","mapStateToProps","users","questions","values","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport QuestionList from './QuestionList'\r\n\r\nclass Home extends Component {\r\n\r\n  render () {\r\n    const {logedUser} = this.props\r\n     if (logedUser.logedUser === '') {\r\n       return (\r\n             <Redirect to= '/login' />\r\n       )\r\n     }\r\n\r\n    else  {\r\n      const {logedUserID, logedUserData, questionId } = this.props\r\n      const logedUserAnswers = Object.keys(logedUserData.answers)\r\n\r\n      const unanswered = logedUserAnswers.map((u) =>\r\n        (questionId.map((q,i) =>{\r\n          if (q!==u){\r\n            questionId.splice(i,1)\r\n          }\r\n        })\r\n      ))\r\n\r\n      return (\r\n        <div className= 'container'>\r\n          <Menu name = {logedUser}/>\r\n          <div>\r\n            <div> questionId\r\n              <ul>\r\n                {questionId.map((qId) => (\r\n                  <li key={qId}>{qId}</li>\r\n                ))\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>Answered\r\n              <ul>\r\n                {logedUserAnswers.map((qId) => (\r\n                  <li key={qId}>{qId}</li>\r\n                ))\r\n                }\r\n              </ul>\r\n            </div>\r\n            <div>UnAnswered\r\n              <ul>\r\n                {logedUserAnswers.map((qId) => (\r\n                  <li key={qId}>{qId}</li>\r\n                ))\r\n                }\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapStateToProps ({logedUser, users, questions}) {\r\n  const logedUserID = Object.values(logedUser)\r\n  const logedUserData = users[logedUserID]\r\n  return {\r\n    logedUser,\r\n    logedUserID,\r\n    logedUserData,\r\n    questionId: Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp),\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home)\r\n"]},"metadata":{},"sourceType":"module"}