{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu'; // TODO delete it later:\n\nimport { saveAnswerInUsers } from '../actions/users';\nimport { handleSaveAnswer } from '../actions/shared'; // TODO delete it later:\n\nimport { saveAnswerInQ } from '../actions/questions';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: '',\n      answered: this.props.location.state.answered\n    };\n\n    this.addOptionToState = e => {\n      e.preventDefault();\n      const dispatch = this.props.dispatch;\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const id = this.props.location.state.id;\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId;\n      const option = this.state.option;\n      this.setState({\n        answered: true\n      }); //    dispatch(saveAnswerInUsers(logedUserId, id, option ))\n      //    dispatch(saveAnswerInQ(logedUserId, id, option ))\n\n      dispatch(handleSaveAnswer(logedUserId, id, option));\n    };\n  }\n\n  render() {\n    const id = this.props.location.state.id;\n    const answered = this.state.answered;\n    const _this$props2 = this.props,\n          logedUserID = _this$props2.logedUserID,\n          logedUserName = _this$props2.logedUserName;\n\n    if (logedUserID === '') {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    } else {\n      const _this$props3 = this.props,\n            questions = _this$props3.questions,\n            addOptionToState = _this$props3.addOptionToState,\n            logedUserAnswers = _this$props3.logedUserAnswers;\n      const author = questions[id].author;\n      const optionOne = questions[id].optionOne.text;\n      const optionTwo = questions[id].optionTwo.text;\n      const answer = logedUserAnswers[id];\n      const nrAnsOne = questions[id].optionOne.votes.length;\n      const nrAnsTwo = questions[id].optionTwo.votes.length;\n      const nrAns = nrAnsOne + nrAnsTwo;\n\n      const percent = (partialValue, totalValue) => 100 * partialValue / totalValue;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: logedUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, answered ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"special-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"You would rather...\"), answer === optionOne ? React.createElement(\"p\", {\n        className: \"special-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, optionOne) : React.createElement(\"p\", {\n        className: \"special-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, optionTwo), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), \"// TODO correct grammar\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, nrAnsOne, \" users / \", percent(nrAnsOne, nrAns), \"% of users choose: \", optionOne), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, nrAnsTwo, \" users / \", percent(nrAnsTwo, nrAns), \"% of users choose: \", optionTwo)) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"special-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Would you rather...\"), React.createElement(\"div\", {\n        className: \"form-vote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"option\",\n        value: \"optionOne\",\n        onChange: this.addOptionToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, optionOne), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"option\",\n        value: \"optionTwo\",\n        onChange: this.addOptionToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), optionTwo, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, optionTwo), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Vote\",\n        onClick: this.handleSubmitAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }))), \"// Question Author\", React.createElement(\"div\", {\n        className: \"questionAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, author), React.createElement(\"div\", {\n        className: \"user-avatar\",\n        style: {\n          backgroundColor: 'LightSteelBlue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  logedUser,\n  users\n}) {\n  const logedUserId = logedUser.id;\n  const logedUserName = logedUser.name;\n  const logedUserAnswers = users[logedUserId].answers;\n  return {\n    logedUserId,\n    logedUserName,\n    questions,\n    logedUserAnswers\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Redirect","Menu","saveAnswerInUsers","handleSaveAnswer","saveAnswerInQ","QuestionCard","state","option","answered","props","location","addOptionToState","e","preventDefault","dispatch","setState","target","value","handleSubmitAnswer","id","logedUserId","render","logedUserID","logedUserName","questions","logedUserAnswers","author","optionOne","text","optionTwo","answer","nrAnsOne","votes","length","nrAnsTwo","nrAns","percent","partialValue","totalValue","backgroundColor","mapStateToProps","logedUser","users","name","answers"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\n// TODO delete it later:\r\nimport { saveAnswerInUsers } from '../actions/users'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n// TODO delete it later:\r\nimport { saveAnswerInQ } from '../actions/questions'\r\n\r\nclass QuestionCard extends Component {\r\n  state={\r\n    option: '',\r\n    answered: this.props.location.state.answered\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch } = this.props\r\n    this.setState({ option: e.target.value})\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { id } = this.props.location.state\r\n    const { dispatch, logedUserId } = this.props\r\n    const { option } = this.state\r\n    this.setState({ answered: true})\r\n//    dispatch(saveAnswerInUsers(logedUserId, id, option ))\r\n//    dispatch(saveAnswerInQ(logedUserId, id, option ))\r\n    dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.location.state\r\n    const { answered } = this.state\r\n    const { logedUserID, logedUserName}= this.props\r\n\r\n     if (logedUserID === '') {\r\n       return (\r\n             <Redirect to= '/login' />\r\n       )\r\n     }\r\n\r\n     else {\r\n\r\n       const { questions, addOptionToState,logedUserAnswers}= this.props\r\n       const author= questions[id].author\r\n       const optionOne= questions[id].optionOne.text\r\n       const optionTwo= questions[id].optionTwo.text\r\n       const answer= logedUserAnswers[id]\r\n       const nrAnsOne= questions[id].optionOne.votes.length\r\n       const nrAnsTwo= questions[id].optionTwo.votes.length\r\n       const nrAns = nrAnsOne + nrAnsTwo\r\n\r\n       const percent= (partialValue, totalValue) => (\r\n         (100 * partialValue) / totalValue\r\n       )\r\n\r\n\r\n       return(\r\n         <div className= 'container'>\r\n           <Menu name = {logedUserName}/>\r\n\r\n            <div className='question-card'>\r\n            {(answered) ?\r\n              <React.Fragment>\r\n                <h2 className='special-text'>You would rather...</h2>\r\n                  {(answer===optionOne) ?\r\n                  <p className='special-text'>{optionOne}</p>\r\n                  : <p className='special-text'>{optionTwo}</p>}\r\n\r\n                  <hr />\r\n                  // TODO correct grammar\r\n                  <p>{nrAnsOne} users / {percent(nrAnsOne, nrAns)}% of users choose: {optionOne}</p>\r\n                  <p>{nrAnsTwo} users / {percent(nrAnsTwo, nrAns)}% of users choose: {optionTwo}</p>\r\n\r\n              </React.Fragment>\r\n\r\n              :\r\n              <React.Fragment>\r\n                <h2 className='special-text'>Would you rather...</h2>\r\n                  <div className='form-vote'>\r\n                    <div>\r\n                     <input type='radio' name='option' value='optionOne'onChange= {this.addOptionToState} />\r\n                     <label>{optionOne}</label><br/>\r\n                     <input type='radio' name='option' value='optionTwo' onChange= {this.addOptionToState} />{optionTwo}\r\n                     <label>{optionTwo}</label><br/>\r\n                    </div>\r\n                     <input type='submit' value='Vote' onClick= {this.handleSubmitAnswer} />\r\n                  </div>\r\n              </React.Fragment>\r\n            }\r\n\r\n// Question Author\r\n\r\n             <div className='questionAuthor'>\r\n               <hr />\r\n               <p>{author}</p>\r\n               <div\r\n                className='user-avatar'\r\n                style= {{\r\n                       backgroundColor: 'LightSteelBlue',\r\n                     }}\r\n               ></div>\r\n             </div>\r\n           </div>\r\n\r\n       </div>\r\n       )\r\n     }\r\n\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({questions, logedUser, users}) {\r\n  const logedUserId = logedUser.id\r\n  const logedUserName = logedUser.name\r\n  const logedUserAnswers = users[logedUserId].answers\r\n  return {\r\n    logedUserId,\r\n    logedUserName,\r\n    questions,\r\n    logedUserAnswers\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}