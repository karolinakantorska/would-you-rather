{"ast":null,"code":"import _objectWithoutProperties from \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport { handleInitialDataUsers, handleInitialDataQuestions } from '../actions/shared';\nimport './App.css';\nimport Login from './Login';\nimport Home from './Home';\nimport LeaderBoard from './LeaderBoard';\nimport AddQuestion from './AddQuestion';\nimport QuestionCard from './QuestionCard';\nimport NoMatchPage from './NoMatchPage';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch(handleInitialDataUsers());\n    this.props.dispatch(handleInitialDataQuestions());\n  }\n\n  render() {\n    const logedUserID = this.props.logedUserID;\n\n    const PrivateRoute = (_ref) => {\n      let Component = _ref.component,\n          rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n      return React.createElement(Route, Object.assign({}, rest, {\n        render: props => logedUserID === '' ? React.createElement(Component, Object.assign({}, props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        })) : React.createElement(Redirect, {\n          to: \"/login\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    };\n\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Switch, {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(PrivateRoute, {\n      path: \"/\",\n      exact: true,\n      component: Home,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/login\",\n      component: Login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/leaderboard\",\n      component: LeaderBoard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/add\",\n      component: AddQuestion,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(PrivateRoute, {\n      path: \"/questions/:id\",\n      component: QuestionCard,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(Route, {\n      component: NoMatchPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }))) // <Router >\n    //   <Switch className=\"App\">\n    //     <Route path='/' exact component={Home} />\n    //     <Route path='/login' component={Login} />\n    //     <Route path='/leaderboard' component={LeaderBoard} />\n    //     <Route path='/add' component={AddQuestion} />\n    //     <Route path= '/questions/:id' component={QuestionCard} />\n    //     <Route component={NoMatchPage} />\n    //   </Switch>\n    // </Router>\n    ;\n  }\n\n} // TODO delete mapStateToProps\n\n\nfunction mapStateToProps(logedUser) {\n  const logedUserID = logedUser.id;\n  return {\n    logedUserID\n  };\n}\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/App.js"],"names":["React","Component","connect","BrowserRouter","Router","Route","Switch","Redirect","handleInitialDataUsers","handleInitialDataQuestions","Login","Home","LeaderBoard","AddQuestion","QuestionCard","NoMatchPage","App","componentDidMount","props","dispatch","render","logedUserID","PrivateRoute","component","rest","mapStateToProps","logedUser","id"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,EAAiDC,QAAjD,QAAiE,kBAAjE;AACA,SAASC,sBAAT,EAAiCC,0BAAjC,QAAmE,mBAAnE;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,GAAN,SAAkBf,SAAlB,CAA4B;AAE1BgB,EAAAA,iBAAiB,GAAI;AACnB,SAAKC,KAAL,CAAWC,QAAX,CAAoBX,sBAAsB,EAA1C;AACA,SAAKU,KAAL,CAAWC,QAAX,CAAoBV,0BAA0B,EAA9C;AAED;;AACDW,EAAAA,MAAM,GAAG;AAAA,UAECC,WAFD,GAEiB,KAAKH,KAFtB,CAECG,WAFD;;AAKP,UAAMC,YAAY,GAAG;AAAA,UAAcrB,SAAd,QAAGsB,SAAH;AAAA,UAA4BC,IAA5B;;AAAA,aACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,QAAA,MAAM,EAAGN,KAAD,IACvBG,WAAW,KAAK,EAAhB,GACI,oBAAC,SAAD,oBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,GAEI,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADmB;AAAA,KAArB;;AAOE,WACG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,GAAnB;AAAuB,MAAA,KAAK,MAA5B;AAA6B,MAAA,SAAS,EAAEP,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,SAAS,EAAED,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,cAAnB;AAAkC,MAAA,SAAS,EAAEE,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAEC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAE,gBAApB;AAAqC,MAAA,SAAS,EAAEC,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME,oBAAC,KAAD;AAAO,MAAA,SAAS,EAAEC,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF,CADH,CAWE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApBF;AAsBH;;AAzCyB,C,CA2C5B;;;AACA,SAASU,eAAT,CAAyBC,SAAzB,EAAmC;AACjC,QAAML,WAAW,GAAGK,SAAS,CAACC,EAA9B;AACA,SAAO;AACLN,IAAAA;AADK,GAAP;AAGD;;AACD,eAAenB,OAAO,CAACuB,eAAD,CAAP,CAAyBT,GAAzB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\nimport { handleInitialDataUsers, handleInitialDataQuestions } from '../actions/shared'\nimport './App.css';\nimport Login from './Login'\nimport Home from './Home'\nimport LeaderBoard from './LeaderBoard'\nimport AddQuestion from './AddQuestion'\nimport QuestionCard from './QuestionCard'\nimport NoMatchPage from './NoMatchPage'\n\n\nclass App extends Component {\n\n  componentDidMount () {\n    this.props.dispatch(handleInitialDataUsers())\n    this.props.dispatch(handleInitialDataQuestions())\n\n  }\n  render() {\n\n    const { logedUserID } = this.props\n\n\n    const PrivateRoute = ({ component: Component, ...rest }) => (\n      <Route {...rest} render={(props) => (\n        logedUserID === ''\n          ? <Component {...props} />\n          : <Redirect to='/login' />\n      )} />\n    )\n      return (\n         <Router >\n           <Switch className=\"App\">\n             <PrivateRoute path='/' exact component={Home} />\n             <Route path='/login' component={Login} />\n             <PrivateRoute path='/leaderboard' component={LeaderBoard} />\n             <PrivateRoute path='/add' component={AddQuestion} />\n             <PrivateRoute path= '/questions/:id' component={QuestionCard} />\n             <Route component={NoMatchPage} />\n           </Switch>\n         </Router>\n        // <Router >\n        //   <Switch className=\"App\">\n        //     <Route path='/' exact component={Home} />\n        //     <Route path='/login' component={Login} />\n        //     <Route path='/leaderboard' component={LeaderBoard} />\n        //     <Route path='/add' component={AddQuestion} />\n        //     <Route path= '/questions/:id' component={QuestionCard} />\n        //     <Route component={NoMatchPage} />\n        //   </Switch>\n        // </Router>\n      )\n  }\n}\n// TODO delete mapStateToProps\nfunction mapStateToProps(logedUser){\n  const logedUserID = logedUser.id\n  return {\n    logedUserID\n  }\n}\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}