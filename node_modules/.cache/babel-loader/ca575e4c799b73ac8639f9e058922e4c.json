{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu'; // TODO delete it later:\n\nimport { saveAnswerInUsers } from '../actions/users';\nimport { handleSaveAnswer } from '../actions/shared'; // TODO delete it later:\n\nimport { saveAnswerInQ } from '../actions/questions';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: ''\n    };\n\n    this.addOptionToState = e => {\n      e.preventDefault();\n      const dispatch = this.props.dispatch;\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const id = this.props.location.state.id;\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId;\n      const option = this.state.option;\n      dispatch(saveAnswerInUsers(logedUserId, id, option));\n      dispatch(saveAnswerInQ(logedUserId, id, option)); //dispatch(handleSaveAnswer(logedUserId, id, option ))\n    };\n  }\n\n  render() {\n    const id = this.props.location.state.id;\n    const _this$props2 = this.props,\n          logedUserID = _this$props2.logedUserID,\n          logedUserName = _this$props2.logedUserName;\n\n    if (logedUserID === '') {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      });\n    } else {\n      const id = this.props.location.state.id;\n      const _this$props3 = this.props,\n            questions = _this$props3.questions,\n            addOptionToState = _this$props3.addOptionToState;\n      const author = questions[id].author;\n      const optionOne = questions[id].optionOne.text;\n      const optionTwo = questions[id].optionTwo.text;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: logedUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"question-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"special-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Would you rather...\"), React.createElement(\"div\", {\n        className: \"form-vote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"option\",\n        value: \"optionOne\",\n        onChange: this.addOptionToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, optionOne), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"option\",\n        value: \"optionTwo\",\n        onChange: this.addOptionToState,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), optionTwo, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, optionTwo), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Vote\",\n        onClick: this.handleSubmitAnswer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"questionAuthor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, author), React.createElement(\"div\", {\n        className: \"user-avatar\",\n        style: {\n          backgroundColor: 'LightSteelBlue'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  logedUser\n}) {\n  const logedUserId = logedUser.id;\n  const logedUserName = logedUser.name;\n  return {\n    logedUserId,\n    logedUserName,\n    questions // author: questions[id].author,\n    // optionOne: questions[id].optionOne.text,\n    // optionTwo: questions[id].optionTwo.text,\n\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Redirect","Menu","saveAnswerInUsers","handleSaveAnswer","saveAnswerInQ","QuestionCard","state","option","addOptionToState","e","preventDefault","dispatch","props","setState","target","value","handleSubmitAnswer","id","location","logedUserId","render","logedUserID","logedUserName","questions","author","optionOne","text","optionTwo","backgroundColor","mapStateToProps","logedUser","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\n// TODO delete it later:\r\nimport { saveAnswerInUsers } from '../actions/users'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n// TODO delete it later:\r\nimport { saveAnswerInQ } from '../actions/questions'\r\n\r\nclass QuestionCard extends Component {\r\n  state={\r\n    option: '',\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch } = this.props\r\n    this.setState({ option: e.target.value})\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { id } = this.props.location.state\r\n    const { dispatch, logedUserId } = this.props\r\n    const { option } = this.state\r\n    dispatch(saveAnswerInUsers(logedUserId, id, option ))\r\n    dispatch(saveAnswerInQ(logedUserId, id, option ))\r\n    //dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.location.state\r\n    const { logedUserID, logedUserName}= this.props\r\n\r\n     if (logedUserID === '') {\r\n       return (\r\n             <Redirect to= '/login' />\r\n       )\r\n     }\r\n\r\n     else {\r\n       const { id } = this.props.location.state\r\n       const { questions, addOptionToState}= this.props\r\n       const author= questions[id].author\r\n       const optionOne= questions[id].optionOne.text\r\n       const optionTwo= questions[id].optionTwo.text\r\n       return(\r\n         <div className= 'container'>\r\n           <Menu name = {logedUserName}/>\r\n\r\n           <div className='question-card'>\r\n             <h2 className='special-text'>Would you rather...</h2>\r\n               <div className='form-vote'>\r\n                 <div>\r\n                  <input type='radio' name='option' value='optionOne'onChange= {this.addOptionToState} />\r\n                  <label>{optionOne}</label><br/>\r\n                  <input type='radio' name='option' value='optionTwo' onChange= {this.addOptionToState} />{optionTwo}\r\n                  <label>{optionTwo}</label><br/>\r\n                 </div>\r\n                  <input type='submit' value='Vote' onClick={this.handleSubmitAnswer} />\r\n               </div>\r\n               <p></p>\r\n\r\n             <div className='questionAuthor'>\r\n               <hr />\r\n               <p>{author}</p>\r\n               <div\r\n                className='user-avatar'\r\n                style= {{\r\n                       backgroundColor: 'LightSteelBlue',\r\n                     }}\r\n               ></div>\r\n             </div>\r\n           </div>\r\n\r\n       </div>\r\n       )\r\n     }\r\n\r\n\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({questions, logedUser}) {\r\n  const logedUserId = logedUser.id\r\n  const logedUserName = logedUser.name\r\n  return {\r\n    logedUserId,\r\n    logedUserName,\r\n    questions,\r\n    // author: questions[id].author,\r\n    // optionOne: questions[id].optionOne.text,\r\n    // optionTwo: questions[id].optionTwo.text,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}