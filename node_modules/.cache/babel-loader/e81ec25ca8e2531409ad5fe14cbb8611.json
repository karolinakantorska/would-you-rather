{"ast":null,"code":"import _objectSpread from \"K:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { RECEIVE_QUESTIONS } from '../actions/questions';\nimport { SAVE_ANSWER_IN_Q } from '../actions/questions';\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return _objectSpread({}, state, {}, action.questions);\n\n    case SAVE_ANSWER_IN_Q:\n      const option = action.option;\n      return _objectSpread({}, state, {\n        [action.qid]: _objectSpread({}, state[action.qid], {\n          [option]: _objectSpread({}, state[action.qid][option], {\n            votes: _objectSpread({}, state[action.qid][option].votes.append(action.logedUserId))\n          })\n        })\n      });\n\n    default:\n      return state;\n  }\n} // return {\n//   ...state,\n//   [action.authedUser]:{\n//     ...state[action.authedUser],\n//     answers: {\n//       ...state[action.authedUser].answers,\n//       [action.qId] : action.option\n//     }\n//   }\n// }\n// (logedUserId, qid, option)\n// {questions[qid][answer].votes.concat([logedUserId])","map":{"version":3,"sources":["K:/Karolina/react projects/would-you-rather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","SAVE_ANSWER_IN_Q","users","state","action","type","questions","option","qid","votes","append","logedUserId"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,sBAAlC;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAK,GAAC,EAAtB,EAA0BC,MAA1B,EAAkC;AAC/C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKL,iBAAL;AACE,+BACMG,KADN,MAEMC,MAAM,CAACE,SAFb;;AAIF,SAAKL,gBAAL;AACA,YAAMM,MAAM,GAAEH,MAAM,CAACG,MAArB;AACE,+BACKJ,KADL;AAEE,SAACC,MAAM,CAACI,GAAR,qBACKL,KAAK,CAACC,MAAM,CAACI,GAAR,CADV;AAEE,WAACD,MAAD,qBACKJ,KAAK,CAACC,MAAM,CAACI,GAAR,CAAL,CAAkBD,MAAlB,CADL;AAEIE,YAAAA,KAAK,oBACAN,KAAK,CAACC,MAAM,CAACI,GAAR,CAAL,CAAkBD,MAAlB,EAA0BE,KAA1B,CAAgCC,MAAhC,CAAuCN,MAAM,CAACO,WAA9C,CADA;AAFT;AAFF;AAFF;;AAcF;AACE,aAAOR,KAAP;AAvBJ;AAyBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA","sourcesContent":["import { RECEIVE_QUESTIONS } from '../actions/questions'\r\nimport { SAVE_ANSWER_IN_Q } from '../actions/questions'\r\n\r\nexport default function users (state={}, action) {\r\n  switch(action.type) {\r\n    case RECEIVE_QUESTIONS :\r\n      return {\r\n        ... state,\r\n        ... action.questions\r\n      }\r\n    case SAVE_ANSWER_IN_Q :\r\n    const option= action.option\r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          [option]: {\r\n            ...state[action.qid][option],\r\n              votes: {\r\n                ...state[action.qid][option].votes.append(action.logedUserId)\r\n                \r\n             }\r\n            }\r\n          }\r\n        }\r\n\r\n    default :\r\n      return state\r\n  }\r\n}\r\n\r\n// return {\r\n//   ...state,\r\n//   [action.authedUser]:{\r\n//     ...state[action.authedUser],\r\n//     answers: {\r\n//       ...state[action.authedUser].answers,\r\n//       [action.qId] : action.option\r\n//     }\r\n//   }\r\n// }\r\n\r\n\r\n// (logedUserId, qid, option)\r\n// {questions[qid][answer].votes.concat([logedUserId])\r\n"]},"metadata":{},"sourceType":"module"}