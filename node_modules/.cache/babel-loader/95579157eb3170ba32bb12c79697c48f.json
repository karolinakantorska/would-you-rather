{"ast":null,"code":"import _objectSpread from \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { RECEIVE_QUESTIONS, SAVE_ANSWER_IN_Q, ADD_QUESTION_IN_Q } from '../actions/questions';\nexport default function users(state = {}, action) {\n  switch (action.type) {\n    case RECEIVE_QUESTIONS:\n      return _objectSpread({}, state, {}, action.questions);\n\n    case SAVE_ANSWER_IN_Q:\n      const option = action.option;\n      return _objectSpread({}, state, {\n        [action.qid]: _objectSpread({}, state[action.qid], {\n          [option]: _objectSpread({}, state[action.qid][option], {\n            votes: state[action.qid][option].votes.concat([action.authedUser])\n          })\n        })\n      });\n\n    case ADD_QUESTION_IN_Q:\n      return _objectSpread({}, state, {\n        [action.question.id]: action.question\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/reducers/questions.js"],"names":["RECEIVE_QUESTIONS","SAVE_ANSWER_IN_Q","ADD_QUESTION_IN_Q","users","state","action","type","questions","option","qid","votes","concat","authedUser","question","id"],"mappings":";AAAA,SAASA,iBAAT,EAA4BC,gBAA5B,EAA8CC,iBAA9C,QAAuE,sBAAvE;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAK,GAAG,EAAxB,EAA4BC,MAA5B,EAAoC;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,iBAAL;AACE,+BACKI,KADL,MAEKC,MAAM,CAACE,SAFZ;;AAIF,SAAKN,gBAAL;AACA,YAAMO,MAAM,GAAGH,MAAM,CAACG,MAAtB;AACE,+BACKJ,KADL;AAEE,SAACC,MAAM,CAACI,GAAR,qBACKL,KAAK,CAACC,MAAM,CAACI,GAAR,CADV;AAEE,WAACD,MAAD,qBACKJ,KAAK,CAACC,MAAM,CAACI,GAAR,CAAL,CAAkBD,MAAlB,CADL;AAEEE,YAAAA,KAAK,EAAEN,KAAK,CAACC,MAAM,CAACI,GAAR,CAAL,CAAkBD,MAAlB,EAA0BE,KAA1B,CAAgCC,MAAhC,CAAuC,CAACN,MAAM,CAACO,UAAR,CAAvC;AAFT;AAFF;AAFF;;AAUF,SAAKV,iBAAL;AACE,+BACKE,KADL;AAEE,SAACC,MAAM,CAACQ,QAAP,CAAgBC,EAAjB,GAAsBT,MAAM,CAACQ;AAF/B;;AAKF;AACE,aAAOT,KAAP;AAzBJ;AA2BD","sourcesContent":["import { RECEIVE_QUESTIONS, SAVE_ANSWER_IN_Q, ADD_QUESTION_IN_Q } from '../actions/questions'\r\n\r\nexport default function users (state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESTIONS :\r\n      return {\r\n        ...state,\r\n        ...action.questions\r\n      }\r\n    case SAVE_ANSWER_IN_Q :\r\n    const option = action.option\r\n      return {\r\n        ...state,\r\n        [action.qid]: {\r\n          ...state[action.qid],\r\n          [option]: {\r\n            ...state[action.qid][option],\r\n            votes: state[action.qid][option].votes.concat([action.authedUser])\r\n          }\r\n        }\r\n      }\r\n    case ADD_QUESTION_IN_Q :\r\n      return {\r\n        ...state,\r\n        [action.question.id]: action.question\r\n      }\r\n\r\n    default :\r\n      return state\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}