{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport { handleSaveAnswer } from '../actions/shared';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: '',\n      answered: this.props.location.state.answered\n    };\n\n    this.addOptionToState = e => {\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId;\n      const id = this.props.location.state.id;\n      const option = this.state.option;\n      dispatch(handleSaveAnswer(logedUserId, id, option)).then(() => this.props.history.push('/'));\n    };\n  }\n\n  render() {\n    const match = this.props.match;\n    console.log(match.params.id);\n    const id = this.props.location.state.id;\n    const answered = this.state.answered;\n    const _this$props2 = this.props,\n          questions = _this$props2.questions,\n          logedUserAnswers = _this$props2.logedUserAnswers,\n          avatars = _this$props2.avatars;\n    const QuestionId = questions[0];\n    const author = questions[id].author;\n    const userAvatar = avatars.filter(a => a[0] === author);\n    const optionOne = questions[id].optionOne.text;\n    const optionTwo = questions[id].optionTwo.text;\n    const answer = logedUserAnswers[id];\n    const nrAnsOne = questions[id].optionOne.votes.length;\n    const nrAnsTwo = questions[id].optionTwo.votes.length;\n    const nrAns = nrAnsOne + nrAnsTwo;\n\n    const percent = (partialValue, totalValue) => 100 * partialValue / totalValue;\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, answered ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"special-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"You would rather...\"), answer === optionOne ? React.createElement(\"p\", {\n      className: \"special-text option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, optionOne, id) : React.createElement(\"p\", {\n      className: \"special-text option\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, optionTwo), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, nrAnsOne, nrAnsOne === 1 ? ' user' : ' users', \" / \", percent(nrAnsOne, nrAns), \"% of users choose: \", optionOne), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, nrAnsTwo, \" \", nrAnsTwo === 1 ? ' user' : ' users', \" / \", percent(nrAnsTwo, nrAns), \"% of users choose: \", optionTwo), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"special-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Would you rather...\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"form-vote\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: \"optionOne\",\n      onChange: this.addOptionToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, optionOne), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"option\",\n      value: \"optionTwo\",\n      onChange: this.addOptionToState,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, optionTwo), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Vote\",\n      onClick: this.handleSubmitAnswer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"questionAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, author), React.createElement(\"div\", {\n      className: \"user-avatar\",\n      style: {\n        backgroundColor: 'LightSteelBlue',\n        backgroundImage: `url(${userAvatar[0][1]})`,\n        backgroundSize: '80px 100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  logedUser,\n  users\n}) {\n  const logedUserId = logedUser.id;\n  const logedUserAnswers = users[logedUser.id].answers;\n  const usersId = Object.keys(users);\n  const avatars = [];\n  usersId.map(user => avatars.push([user, users[user].avatarURL]));\n  return {\n    logedUserId,\n    questions,\n    logedUserAnswers,\n    avatars\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Menu","handleSaveAnswer","QuestionCard","state","option","answered","props","location","addOptionToState","e","setState","target","value","handleSubmitAnswer","preventDefault","dispatch","logedUserId","id","then","history","push","render","match","console","log","params","questions","logedUserAnswers","avatars","QuestionId","author","userAvatar","filter","a","optionOne","text","optionTwo","answer","nrAnsOne","votes","length","nrAnsTwo","nrAns","percent","partialValue","totalValue","backgroundColor","backgroundImage","backgroundSize","mapStateToProps","logedUser","users","answers","usersId","Object","keys","map","user","avatarURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n\r\n\r\nclass QuestionCard extends Component {\r\n  state= {\r\n    option: '',\r\n    answered: this.props.location.state.answered,\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n        this.setState({ option: e.target.value })\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch, logedUserId } = this.props\r\n    const { id } = this.props.location.state\r\n    const { option } = this.state\r\n\r\n    dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n    .then(() => this.props.history.push('/'))\r\n  }\r\n\r\n  render() {\r\n    const { match } = this.props\r\n    console.log(match.params.id)\r\n   const { id } = this.props.location.state\r\n   const { answered } = this.state\r\n   const { questions,logedUserAnswers, avatars}= this.props\r\n   const QuestionId =questions[0]\r\n   const author= questions[id].author\r\n\r\n   const userAvatar = avatars.filter(\r\n     (a) => (a[0]===author)\r\n   )\r\n\r\n   const optionOne= questions[id].optionOne.text\r\n   const optionTwo= questions[id].optionTwo.text\r\n   const answer= logedUserAnswers[id]\r\n   const nrAnsOne= questions[id].optionOne.votes.length\r\n   const nrAnsTwo= questions[id].optionTwo.votes.length\r\n   const nrAns = nrAnsOne + nrAnsTwo\r\n\r\n   const percent= (partialValue, totalValue) => (\r\n     (100 * partialValue) / totalValue\r\n   )\r\n\r\n       return(\r\n         <div >\r\n           <Menu />\r\n            <div className='container card'>\r\n              {(answered) ?\r\n              <React.Fragment>\r\n                <h2 className='special-text'>You would rather...</h2>\r\n                  {(answer===optionOne) ?\r\n                    <p className='special-text option'>{optionOne}{id}</p>\r\n                  : <p className='special-text option'>{optionTwo}</p>}\r\n                  <p>{nrAnsOne}{(nrAnsOne === 1) ? ' user' : ' users'} / {percent(nrAnsOne, nrAns)}% of users choose: {optionOne}</p>\r\n                  <p>{nrAnsTwo} {(nrAnsTwo === 1) ? ' user' : ' users'} / {percent(nrAnsTwo, nrAns)}% of users choose: {optionTwo}</p>\r\n                  <hr />\r\n              </React.Fragment>\r\n              :\r\n              <React.Fragment>\r\n                <h2 className='special-text'>Would you rather...</h2>\r\n                <p></p>\r\n                  <div className='form-vote'>\r\n                     <input type='radio' name= 'option' value='optionOne'onChange= {this.addOptionToState} />\r\n                     <label>{optionOne}</label><br/>\r\n                     <input type='radio' name= 'option' value='optionTwo' onChange= {this.addOptionToState} />\r\n                     <label>{optionTwo}</label><br/>\r\n                     <input type='submit' value='Vote' onClick= {this.handleSubmitAnswer} />\r\n                  </div>\r\n                  <hr />\r\n              </React.Fragment>\r\n            }\r\n             <div className='questionAuthor'>\r\n               <p >{author}</p>\r\n               <div className='user-avatar'\r\n                style= {{\r\n                       backgroundColor: 'LightSteelBlue' ,\r\n                       backgroundImage: `url(${userAvatar[0][1]})`,\r\n                       backgroundSize: '80px 100px',\r\n                     }}\r\n               ></div>\r\n             </div>\r\n           </div>\r\n       </div>\r\n       )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({questions, logedUser, users}) {\r\n  const logedUserId = logedUser.id\r\n  const logedUserAnswers = users[logedUser.id].answers\r\n  const usersId = Object.keys(users)\r\n  const avatars = []\r\n  usersId.map((user) =>\r\n    avatars.push([user,users[user].avatarURL ])\r\n  )\r\n\r\n  return {\r\n    logedUserId,\r\n    questions,\r\n    logedUserAnswers,\r\n    avatars\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}