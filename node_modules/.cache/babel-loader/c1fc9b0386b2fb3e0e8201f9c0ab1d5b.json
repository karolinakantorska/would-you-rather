{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\QuestionCard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Menu from './Menu';\nimport { handleSaveAnswer } from '../actions/shared';\n\nclass QuestionCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      option: '',\n      answered: this.props.location.state.answered\n    };\n\n    this.addOptionToState = e => {\n      this.setState({\n        option: e.target.value\n      });\n    };\n\n    this.handleSubmitAnswer = e => {\n      e.preventDefault();\n      const _this$props = this.props,\n            dispatch = _this$props.dispatch,\n            logedUserId = _this$props.logedUserId; // const { id } = this.props.location.state\n\n      const id = this.props.match.params.id;\n      const option = this.state.option;\n      dispatch(handleSaveAnswer(logedUserId, id, option)).then(() => this.props.history.push('/'));\n    };\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          questions = _this$props2.questions,\n          logedUserAnswers = _this$props2.logedUserAnswers,\n          avatars = _this$props2.avatars; // const ID = this.props.match.params.id\n    // const { id } = this.props.location.state\n    //const author= questions.am8ehyc8byjqgar0jgpub9.author\n\n    const answered = this.state.answered;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"container card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"questionAuthor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"author\"), React.createElement(\"div\", {\n      className: \"user-avatar\",\n      style: {\n        backgroundColor: 'LightSteelBlue',\n        backgroundSize: '80px 100px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nfunction mapStateToProps(state, props) {\n  const questions = state.questions,\n        logedUser = state.logedUser,\n        users = state.users;\n  const id = props.tatch.params.id;\n  const logedUserId = logedUser.id;\n  const logedUserAnswers = users[logedUser.id].answers;\n  const usersId = Object.keys(users);\n  const avatars = [];\n  usersId.map(user => avatars.push([user, users[user].avatarURL]));\n  return {\n    logedUserId,\n    questions,\n    logedUserAnswers,\n    avatars,\n    id\n  };\n}\n\nexport default connect(mapStateToProps)(QuestionCard);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/QuestionCard.js"],"names":["React","Component","connect","Menu","handleSaveAnswer","QuestionCard","state","option","answered","props","location","addOptionToState","e","setState","target","value","handleSubmitAnswer","preventDefault","dispatch","logedUserId","id","match","params","then","history","push","render","questions","logedUserAnswers","avatars","backgroundColor","backgroundSize","mapStateToProps","logedUser","users","tatch","answers","usersId","Object","keys","map","user","avatarURL"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Menu from './Menu'\r\nimport { handleSaveAnswer } from '../actions/shared'\r\n\r\n\r\nclass QuestionCard extends Component {\r\n  state= {\r\n    option: '',\r\n    answered: this.props.location.state.answered,\r\n  }\r\n\r\n  addOptionToState = (e) => {\r\n        this.setState({ option: e.target.value })\r\n  }\r\n\r\n  handleSubmitAnswer = (e) => {\r\n    e.preventDefault()\r\n    const { dispatch, logedUserId } = this.props\r\n    // const { id } = this.props.location.state\r\n    const id = this.props.match.params.id\r\n    const { option } = this.state\r\n\r\n    dispatch(handleSaveAnswer(logedUserId, id, option ))\r\n    .then(() => this.props.history.push('/'))\r\n  }\r\n\r\n  render() {\r\n    const { questions,logedUserAnswers, avatars}= this.props\r\n\r\n    // const ID = this.props.match.params.id\r\n\r\n   // const { id } = this.props.location.state\r\n   //const author= questions.am8ehyc8byjqgar0jgpub9.author\r\n\r\n\r\n\r\n\r\n\r\n\r\n   const { answered } = this.state\r\n\r\n\r\n\r\n\r\n\r\n       return(\r\n         <div >\r\n           <Menu />\r\n            <div className='container card'>\r\n\r\n             <div className='questionAuthor'>\r\n               <p >author</p>\r\n               <div className='user-avatar'\r\n                style= {{\r\n                       backgroundColor: 'LightSteelBlue' ,\r\n\r\n                       backgroundSize: '80px 100px',\r\n                     }}\r\n               ></div>\r\n             </div>\r\n           </div>\r\n       </div>\r\n       )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state, props) {\r\n  const {questions, logedUser, users} = state\r\n  const id = props.tatch.params.id\r\n  const logedUserId = logedUser.id\r\n  const logedUserAnswers = users[logedUser.id].answers\r\n  const usersId = Object.keys(users)\r\n  const avatars = []\r\n  usersId.map((user) =>\r\n    avatars.push([user,users[user].avatarURL ])\r\n  )\r\n\r\n  return {\r\n    logedUserId,\r\n    questions,\r\n    logedUserAnswers,\r\n    avatars,\r\nid\r\n\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps) (QuestionCard)\r\n"]},"metadata":{},"sourceType":"module"}