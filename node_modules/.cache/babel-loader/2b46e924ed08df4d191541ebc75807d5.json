{"ast":null,"code":"// TODO write it more profesional\nimport { _getUsers } from '../utils/_DATA';\nimport { receiveUsers } from './users';\nimport { _getQuestions } from '../utils/_DATA';\nimport { receiveQuestions } from './questions';\nimport { saveAnswerInQ } from './questions';\nimport { setLogedUser } from './logedUser';\nimport { _saveQuestionAnswer } from '../utils/_DATA';\nimport { saveAnswerInUsers } from './users';\nimport { addQuestionInQ } from './questions';\nimport { _saveQuestion } from '../utils/_DATA';\nexport function handleInitialDataUsers() {\n  return dispatch => {\n    return _getUsers().then(users => {\n      dispatch(receiveUsers(users));\n    });\n  };\n}\nexport function handleInitialDataQuestions() {\n  return dispatch => {\n    return _getQuestions().then(questions => {\n      dispatch(receiveQuestions(questions));\n    });\n  };\n}\nexport function handleSaveAnswer(authedUser, qid, answer) {\n  return dispatch => {\n    return _saveQuestionAnswer({\n      authedUser,\n      qid,\n      answer\n    }).then(users => dispatch(saveAnswerInUsers(authedUser, qid, answer))).then(questions => dispatch(saveAnswerInQ(authedUser, qid, answer)));\n  };\n}\nexport function handleAddQuestion(optionOneText, optionTwoText, author) {\n  const question = {\n    optionOneText,\n    optionTwoText,\n    author\n  };\n  return dispatch => {\n    return _saveQuestion(question)({\n      question\n    }); //    .then((optionOneText, optionTwoText, author) => dispatch(addQuestionInQ (optionOneText, optionTwoText, author)))\n  };\n}","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/actions/shared.js"],"names":["_getUsers","receiveUsers","_getQuestions","receiveQuestions","saveAnswerInQ","setLogedUser","_saveQuestionAnswer","saveAnswerInUsers","addQuestionInQ","_saveQuestion","handleInitialDataUsers","dispatch","then","users","handleInitialDataQuestions","questions","handleSaveAnswer","authedUser","qid","answer","handleAddQuestion","optionOneText","optionTwoText","author","question"],"mappings":"AAAA;AACA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,YAAT,QAA6B,SAA7B;AAEA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,SAASC,YAAT,QAA4B,aAA5B;AACA,SAASC,mBAAT,QAAoC,gBAApC;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,cAAT,QAA8B,aAA9B;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAIA,OAAO,SAASC,sBAAT,GAAkC;AACvC,SAAQC,QAAD,IAAe;AACpB,WAAOX,SAAS,GACbY,IADI,CACEC,KAAD,IAAW;AACfF,MAAAA,QAAQ,CAACV,YAAY,CAACY,KAAD,CAAb,CAAR;AACD,KAHI,CAAP;AAID,GALD;AAMD;AACD,OAAO,SAASC,0BAAT,GAAsC;AAC3C,SAAQH,QAAD,IAAe;AACpB,WAAOT,aAAa,GACjBU,IADI,CACEG,SAAD,IAAe;AACnBJ,MAAAA,QAAQ,CAACR,gBAAgB,CAACY,SAAD,CAAjB,CAAR;AACD,KAHI,CAAP;AAID,GALD;AAMD;AAED,OAAO,SAASC,gBAAT,CAA2BC,UAA3B,EAAuCC,GAAvC,EAA4CC,MAA5C,EAAoD;AACzD,SAAQR,QAAD,IAAc;AACnB,WAAOL,mBAAmB,CAAC;AACzBW,MAAAA,UADyB;AAEzBC,MAAAA,GAFyB;AAGzBC,MAAAA;AAHyB,KAAD,CAAnB,CAIJP,IAJI,CAIEC,KAAD,IAAWF,QAAQ,CAACJ,iBAAiB,CAACU,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAlB,CAJpB,EAKJP,IALI,CAKEG,SAAD,IAAeJ,QAAQ,CAACP,aAAa,CAACa,UAAD,EAAaC,GAAb,EAAkBC,MAAlB,CAAd,CALxB,CAAP;AAMD,GAPD;AAQD;AAGD,OAAO,SAASC,iBAAT,CAA4BC,aAA5B,EAA2CC,aAA3C,EAA0DC,MAA1D,EAAkE;AACvE,QAAMC,QAAQ,GAAE;AAAEH,IAAAA,aAAF;AAAiBC,IAAAA,aAAjB;AAAgCC,IAAAA;AAAhC,GAAhB;AACA,SAAQZ,QAAD,IAAc;AACnB,WAAOF,aAAa,CAAEe,QAAF,CAAb,CAAyB;AAC9BA,MAAAA;AAD8B,KAAzB,CAAP,CADmB,CAIvB;AACG,GALD;AAMD","sourcesContent":["// TODO write it more profesional\r\nimport { _getUsers } from '../utils/_DATA'\r\nimport { receiveUsers } from './users'\r\n\r\nimport { _getQuestions } from '../utils/_DATA'\r\nimport { receiveQuestions } from './questions'\r\nimport { saveAnswerInQ } from './questions'\r\nimport { setLogedUser} from './logedUser'\r\nimport { _saveQuestionAnswer } from '../utils/_DATA'\r\nimport { saveAnswerInUsers } from './users'\r\nimport { addQuestionInQ }from './questions'\r\nimport { _saveQuestion } from '../utils/_DATA'\r\n\r\n\r\n\r\nexport function handleInitialDataUsers() {\r\n  return (dispatch) =>  {\r\n    return _getUsers()\r\n      .then((users) => {\r\n        dispatch(receiveUsers(users))\r\n      })\r\n  }\r\n}\r\nexport function handleInitialDataQuestions() {\r\n  return (dispatch) =>  {\r\n    return _getQuestions()\r\n      .then((questions) => {\r\n        dispatch(receiveQuestions(questions))\r\n      })\r\n  }\r\n}\r\n\r\nexport function handleSaveAnswer (authedUser, qid, answer) {\r\n  return (dispatch) => {\r\n    return _saveQuestionAnswer({\r\n      authedUser,\r\n      qid,\r\n      answer})\r\n      .then((users) => dispatch(saveAnswerInUsers(authedUser, qid, answer)))\r\n      .then((questions) => dispatch(saveAnswerInQ(authedUser, qid, answer)))\r\n  }\r\n}\r\n\r\n\r\nexport function handleAddQuestion (optionOneText, optionTwoText, author) {\r\n  const question= { optionOneText, optionTwoText, author }\r\n  return (dispatch) => {\r\n    return _saveQuestion (question)({\r\n      question\r\n    })\r\n//    .then((optionOneText, optionTwoText, author) => dispatch(addQuestionInQ (optionOneText, optionTwoText, author)))\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}