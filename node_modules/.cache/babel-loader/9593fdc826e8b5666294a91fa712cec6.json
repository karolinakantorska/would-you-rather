{"ast":null,"code":"var _jsxFileName = \"J:\\\\Karolina\\\\react projects\\\\would-you-rather\\\\src\\\\components\\\\Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Menu from './Menu';\nimport QuestionList from './QuestionList';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seeQuestion: true,\n      linkText: 'Show Answered Questions'\n    };\n\n    this.toggleQuestions = () => {\n      this.state.seeQuestion ? this.setState({\n        seeQuestion: false,\n        linkText: 'Show Unanswered Questions'\n      }) : this.setState({\n        seeQuestion: true,\n        linkText: 'Show Answered Questions'\n      });\n    };\n  }\n\n  render() {\n    const logedUserID = this.props.logedUserID;\n\n    if (logedUserID === '') {\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n    } else {\n      const _this$props = this.props,\n            logedUserID = _this$props.logedUserID,\n            logedUserName = _this$props.logedUserName,\n            logedUserData = _this$props.logedUserData,\n            questionId = _this$props.questionId;\n      const _this$state = this.state,\n            seeQuestion = _this$state.seeQuestion,\n            linkText = _this$state.linkText;\n      const logedUserAnswers = Object.keys(logedUserData.answers);\n      const unanswered = [](() => {\n        questionId.map(q => !logedUserAnswers.includes(q) && unanswered.push(q));\n      })();\n      let answered = [](() => {\n        questionId.map(q => logedUserAnswers.includes(q) && answered.push(q));\n      })();\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        name: logedUserName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.toggleQuestions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, linkText), seeQuestion ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(QuestionList, {\n        ids: unanswered,\n        text: \"Unanswert Questions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(QuestionList, {\n        ids: logedUserAnswers,\n        text: \"Answert Questions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }))));\n    }\n  }\n\n}\n\nfunction mapStateToProps({\n  logedUser,\n  users,\n  questions\n}) {\n  const logedUserID = logedUser.id;\n  const logedUserName = logedUser.name;\n  const logedUserData = users[logedUserID];\n  return {\n    logedUserID,\n    logedUserName,\n    logedUserData,\n    questionId: Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp)\n  };\n}\n\nexport default connect(mapStateToProps)(Home);","map":{"version":3,"sources":["J:/Karolina/react projects/would-you-rather/src/components/Home.js"],"names":["React","Component","connect","Redirect","Menu","QuestionList","Home","state","seeQuestion","linkText","toggleQuestions","setState","render","logedUserID","props","logedUserName","logedUserData","questionId","logedUserAnswers","Object","keys","answers","unanswered","map","q","includes","push","answered","mapStateToProps","logedUser","users","questions","id","name","sort","a","b","timestamp"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport Menu from './Menu'\r\nimport QuestionList from './QuestionList'\r\n\r\nclass Home extends Component {\r\n  state= {\r\n    seeQuestion: true,\r\n    linkText: 'Show Answered Questions'\r\n  }\r\n\r\n  toggleQuestions = () => {\r\n    (this.state.seeQuestion) ?\r\n      this.setState({seeQuestion: false, linkText: 'Show Unanswered Questions',})\r\n    :\r\n      this.setState({seeQuestion: true, linkText: 'Show Answered Questions',})\r\n  }\r\n\r\n  render () {\r\n    const {logedUserID} = this.props\r\n     if (logedUserID === '') {\r\n       return (\r\n             <Redirect to= '/login' />\r\n       )\r\n     }\r\n\r\n    else  {\r\n      const {logedUserID, logedUserName, logedUserData, questionId, } = this.props\r\n      const { seeQuestion, linkText }= this.state\r\n      const logedUserAnswers = Object.keys(logedUserData.answers)\r\n\r\n      const unanswered = []\r\n\r\n       (() =>  {questionId.map((q) =>\r\n          (!logedUserAnswers.includes(q)) &&\r\n         unanswered.push(q)\r\n       )})()\r\n\r\n       let answered = []\r\n\r\n        (() =>  {questionId.map((q) =>\r\n           (logedUserAnswers.includes(q)) &&\r\n          answered.push(q)\r\n        )})()\r\n\r\n\r\n\r\n      return (\r\n        <div className= 'container'>\r\n          <Menu name = {logedUserName}/>\r\n          <div>\r\n\r\n            <button onClick={ this.toggleQuestions }>{linkText}</button>\r\n\r\n            {(seeQuestion) ?\r\n              <div>\r\n                <QuestionList ids={unanswered} text= 'Unanswert Questions'/>\r\n              </div>\r\n              :\r\n              <div>\r\n                <QuestionList ids={logedUserAnswers} text= 'Answert Questions'/>\r\n              </div>\r\n             }\r\n\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\nfunction mapStateToProps ({logedUser, users, questions}) {\r\n  const logedUserID = logedUser.id\r\n  const logedUserName = logedUser.name\r\n  const logedUserData = users[logedUserID]\r\n  return {\r\n    logedUserID,\r\n    logedUserName,\r\n    logedUserData,\r\n    questionId: Object.keys(questions).sort((a,b) => questions[b].timestamp - questions[a].timestamp),\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Home)\r\n"]},"metadata":{},"sourceType":"module"}